{
  "openapi": "3.0.0",
  "info": {
    "title": "User and Metric API",
    "version": "1.0.0",
    "description": "API for managing users and metrics"
  },
  "tags": [
    { "name": "User", "description": "Operations about users" },
    { "name": "Metric", "description": "Operations about metrics" },
    { "name": "Season", "description": "Operations about seasons" }
  ],
  "paths": {
    "/api/user": {
      "post": {
        "summary": "Create a new user",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "googleId": { "type": "string" },
                  "email": { "type": "string" },
                  "password": { "type": "string" },
                  "name": { "type": "string" },
                  "class": { "type": "integer" },
                  "avatar": { "type": "string" },
                  "school": { "type": "string" },
                  "province_id": { "type": "integer" },
                  "city_id": { "type": "integer" }
                },
                "required": [
                  "googleId",
                  "email",
                  "name",
                  "school",
                  "class",
                  "province_id",
                  "city_id"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": { "description": "Failed to create user" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/api/user/{id}": {
      "put": {
        "summary": "Update an existing user",
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "googleId": { "type": "string" },
                  "email": { "type": "string" },
                  "password": { "type": "string" },
                  "name": { "type": "string" },
                  "avatar": { "type": "string" },
                  "school": { "type": "string" },
                  "province_id": { "type": "integer" },
                  "city_id": { "type": "integer" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "User updated successfully" },
          "400": { "description": "Failed to update user" },
          "500": { "description": "Server error" }
        }
      },
      "get": {
        "summary": "Get user by ID",
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "404": { "description": "User not found" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/api/user/{id}/rank": {
      "get": {
        "summary": "Get user's scan rank with XP",
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "subject",
            "in": "query",
            "schema": { "type": "string", "enum": ["MATEMATIKA", "BAHASA_INDONESIA", "BAHASA_INGGRIS"] }
          }
        ],
        "responses": {
          "200": {
            "description": "User's scan rank retrieved successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ScanXP" }
              }
            }
          },
          "500": { "description": "Server error" }
        }
      }
    },
    "/api/metric": {
      "post": {
        "summary": "Create a scan metric",
        "tags": ["Metric"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": { "type": "string", "description": "Primary ID of user" },
                  "scan_id": {
                    "type": "string",
                    "description": "ID of scan object",
                    "example": "UJN-1234.xxx"
                  },
                  "subject": { "type": "string", "description": "Subject of scan" },
                  "scan_type": {
                    "type": "string",
                    "description": "Type of scan",
                    "enum": ["UJN", "VID", "BNK"]
                  },
                  "scan_xp": { "type": "integer", "description": "XP earned from scan" }
                },
                "required": ["user_id", "scan_id", "subject", "scan_type", "scan_xp"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Scan metric created successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ScanMetric" }
              }
            }
          },
          "400": { "description": "Failed to create scan metric" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/api/season/current": {
      "get": {
        "summary": "Get current season",
        "tags": ["Season"],
        "responses": {
          "200": {
            "description": "Current season retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "season": { "type": "string" }
                  }
                }
              }
            }
          },
          "500": { "description": "Server error" }
        }
      }
    },
    "/api/season": {
      "post": {
        "summary": "Create a new season",
        "tags": ["Season"],
        "operationId": "createSeason",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Unique code for the season"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the season"
                  },
                  "startAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Start date of the season"
                  },
                  "endAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "End date of the season"
                  }
                },
                "required": ["code", "name", "startAt", "endAt"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Season created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "startAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "endAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "googleId": { "type": "string" },
          "email": { "type": "string" },
          "password": { "type": "string" },
          "name": { "type": "string" },
          "avatar": { "type": "string" },
          "school": { "type": "string" },
          "class": { "type": "integer" },
          "province_id": { "type": "integer" },
          "city_id": { "type": "integer" }
        }
      },
      "ScanXP": {
        "type": "object",
        "properties": {
          "scanXP": { "type": "integer" }
        }
      },
      "ScanMetric": {
        "type": "object",
        "properties": {
          "userId": { "type": "string" },
          "scanId": { "type": "string" },
          "subject": { "type": "string" },
          "scanType": { "type": "string" }
        }
      }
    }
  }
}
